{"ast":null,"code":"import \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"E:\\\\Concordia course\\\\laoma\\u524D\\u7AEF\\\\#9 react\\u6155\\u8BFE2\\\\project\\\\BikeSharingMS-master\\\\src\\\\pages\\\\order\\\\index.js\";\nimport React from 'react';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nclass Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.params = {\n      page: 1\n    };\n\n    this.requestList = () => {\n      let _this = this;\n\n      axios.ajax({\n        url: '/order/list',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        let list = res.result.item_list.map((item, index) => {\n          item.key = index;\n          return item;\n        });\n        this.setState({\n          list,\n          pagination: Utils.pagination(res, current => {\n            _this.params.page = current;\n\n            _this.requestList();\n          })\n        });\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectKey = [index];\n      console.log(record);\n      this.setState({\n        selectedRowKeys: selectKey,\n        selectedItem: record\n      });\n    };\n\n    this.openOrderDetail = () => {\n      let item = this.state.selectedItem;\n\n      if (!item) {\n        _Modal.info({\n          title: 'Notic',\n          content: 'Please select an order'\n        });\n\n        return;\n      } // window.location.href = `/#/common/order/detail/${item.id}`\n\n\n      window.open(\"/#/common/order/detail/\".concat(item.id), '_blank');\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  render() {\n    const columns = [{\n      title: 'Order number',\n      dataIndex: 'order_sn'\n    }, {\n      title: 'Bike number',\n      dataIndex: 'bike_sn'\n    }, {\n      title: 'Username',\n      dataIndex: 'user_name'\n    }, {\n      title: 'Cellphone number',\n      dataIndex: 'mobile'\n    }, {\n      title: 'Distence',\n      dataIndex: 'distance',\n\n      render(distance) {\n        return distance / 1000 + 'Km';\n      }\n\n    }, {\n      title: 'Total time',\n      dataIndex: 'total_time'\n    }, {\n      title: 'Status',\n      dataIndex: 'status',\n\n      render(state) {\n        let config = {\n          '1': 'student',\n          '2': 'worker',\n          '3': 'teacher',\n          '4': 'CEO',\n          '5': 'artist'\n        };\n        return config[state];\n      }\n\n    }, {\n      title: 'Start time',\n      dataIndex: 'start_time'\n    }, {\n      title: 'End time',\n      dataIndex: 'end_time'\n    }, {\n      title: 'Rrder amount',\n      dataIndex: 'total_fee'\n    }, {\n      title: 'The amount actually paid',\n      dataIndex: 'user_pay'\n    }];\n    const formItemLayout = {\n      labelCol: {\n        span: 5\n      },\n      wrapperCol: {\n        span: 19\n      }\n    };\n    const selectedRowKeys = this.state.selectedRowKeys;\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(FilterForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.openOrderDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Order details\"), React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Finish order\")), React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Order;\n\nclass FilterForm extends React.Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(_Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, getFieldDecorator('city_id')(React.createElement(_Select, {\n      style: {\n        width: 80\n      },\n      placeholder: \"Select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Vancouver\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Toronto\"), React.createElement(Option, {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Montreal\")))), React.createElement(FormItem, {\n      label: \"Start time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, getFieldDecorator('start_time')(React.createElement(_DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD HH:mm:ss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      label: \"End time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, getFieldDecorator('end_time')(React.createElement(_DatePicker, {\n      showTime: true,\n      format: \"YYYY-MM-DD HH:mm:ss\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      label: \"Order status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, getFieldDecorator('op_mode')(React.createElement(_Select, {\n      style: {\n        width: 80\n      },\n      placeholder: \"ALL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"processing\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"End of order\")))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      style: {\n        margin: '0 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Search\"), React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nFilterForm = _Form.create({})(FilterForm);","map":{"version":3,"sources":["E:\\Concordia course\\laoma前端\\#9 react慕课2\\project\\BikeSharingMS-master\\src\\pages\\order\\index.js"],"names":["React","axios","Utils","FormItem","Item","Option","Order","Component","state","params","page","requestList","_this","ajax","url","data","then","res","list","result","item_list","map","item","index","key","setState","pagination","current","onRowClick","record","selectKey","console","log","selectedRowKeys","selectedItem","openOrderDetail","info","title","content","window","open","id","componentDidMount","render","columns","dataIndex","distance","config","formItemLayout","labelCol","span","wrapperCol","rowSelection","type","marginTop","onClick","FilterForm","getFieldDecorator","props","form","width","margin","create"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Table, Form, Select, Modal, message, DatePicker } from 'antd';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass Order extends React.Component {\n  state={}\n\n  params = {\n    page: 1\n  }\n  componentDidMount() {\n    this.requestList()\n  }\n  requestList = ()=> {\n    let _this = this;\n    axios.ajax({\n      url: '/order/list',\n      data: {\n        params: {\n          page: this.params.page\n        }\n      }\n    }).then((res)=> {\n      let list = res.result.item_list.map((item, index)=> {\n        item.key = index;\n        return item;\n      });\n      this.setState({\n        list,\n        pagination: Utils.pagination(res, (current)=>{\n          _this.params.page = current;\n          _this.requestList();\n        })\n      })\n    })\n  }\n\n  onRowClick = (record, index) => {\n    let selectKey = [index];\n  console.log(record)\n    this.setState({\n      selectedRowKeys: selectKey,\n      selectedItem: record\n    })\n  }\n\n  openOrderDetail =() =>{\n    let item = this.state.selectedItem;\n    if (!item) {\n        Modal.info({\n            title: 'Notic',\n            content: 'Please select an order'\n        })\n        return;\n    }\n    // window.location.href = `/#/common/order/detail/${item.id}`\n    window.open(`/#/common/order/detail/${item.id}`, '_blank')\n  }\n  \n  render() {\n    const columns = [\n      {\n          title:'Order number',\n          dataIndex:'order_sn'\n      },\n      {\n          title: 'Bike number',\n          dataIndex: 'bike_sn'\n      },\n      {\n          title: 'Username',\n          dataIndex: 'user_name'\n      },\n      {\n          title: 'Cellphone number',\n          dataIndex: 'mobile'\n      },\n      {\n          title: 'Distence',\n          dataIndex: 'distance',\n          render(distance){\n              return distance/1000 + 'Km';\n          }\n      },\n      {\n          title: 'Total time',\n          dataIndex: 'total_time'\n      },\n      {\n          title: 'Status',\n          dataIndex: 'status',\n          render(state) {\n            let config = {\n              '1':'student',\n              '2':'worker',\n              '3':'teacher',\n              '4':'CEO',\n              '5':'artist'\n            }\n            return config[state]\n          }\n      },\n      {\n          title: 'Start time',\n          dataIndex: 'start_time'\n      },\n      {\n          title: 'End time',\n          dataIndex: 'end_time'\n      },\n      {\n          title: 'Rrder amount',\n          dataIndex: 'total_fee'\n      },\n      {\n          title: 'The amount actually paid',\n          dataIndex: 'user_pay'\n      }\n  ]\n  const formItemLayout = {\n      labelCol:{span:5},\n      wrapperCol:{span:19}\n  }\n  const selectedRowKeys = this.state.selectedRowKeys;\n  const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n  }\n    return(\n      <div>\n        <Card>\n          <FilterForm />\n        </Card>\n        <Card style={{marginTop: 10}}>\n          <Button type=\"primary\" onClick={this.openOrderDetail}>Order details</Button>\n          <Button type=\"primary\" >Finish order</Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table \n            bordered\n            columns={columns}\n            dataSource={this.state.list}\n            pagination={this.state.pagination}\n            rowSelection={rowSelection}\n            onRow={(record, index) => {\n                return {\n                    onClick: () => {\n                        this.onRowClick(record, index);\n                    }\n                };\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default Order;\n\nclass FilterForm extends React.Component {\n  \n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    \n    return(\n      <Form layout=\"inline\">\n        <FormItem label=\"City\">\n          {\n            getFieldDecorator('city_id')(\n              <Select\n                style={{width: 80}}\n                placeholder=\"Select\"\n              >\n                <Option value=\"\">ALL</Option>\n                <Option value=\"1\">Vancouver</Option>\n                <Option value=\"2\">Toronto</Option>\n                <Option value=\"3\">Montreal</Option>\n              </Select> \n            )\n          }\n        </FormItem>\n        <FormItem label=\"Start time\">\n          {\n            getFieldDecorator('start_time')(\n              <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\n            )\n          }\n          \n        </FormItem>\n        <FormItem label=\"End time\">\n        {\n            getFieldDecorator('end_time')(\n              <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\"/>\n            )\n          }\n          \n        </FormItem>\n       \n        <FormItem label=\"Order status\">\n          {\n            getFieldDecorator('op_mode')(\n              <Select\n              style={{width: 80}}\n                placeholder=\"ALL\"\n              >               \n                <Option value=\"\">ALL</Option>\n                <Option value=\"1\">processing</Option>\n                <Option value=\"2\">End of order</Option>\n              </Select> \n            )\n          }\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" style={{margin: '0 10px'}}>Search</Button>\n          <Button>Reset</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nFilterForm = Form.create({})(FilterForm);"]},"metadata":{},"sourceType":"module"}