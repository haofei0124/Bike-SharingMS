{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Sensor = undefined;\n\nvar _debounce = require('./debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\n\nvar Sensor = exports.Sensor = function Sensor(element) {\n  var _this = this;\n\n  _classCallCheck(this, Sensor);\n\n  this.createSensor = function () {\n    // 调整样式\n    if (getComputedStyle(_this.element).position === 'static') {\n      _this.element.style.position = 'relative';\n    }\n\n    var obj = document.createElement('object');\n\n    obj.onload = function () {\n      obj.contentDocument.defaultView.addEventListener('resize', _this.resizeListener); // 直接触发一次 resize\n\n      _this.resizeListener();\n    };\n\n    obj.setAttribute('style', _constant.SensorStyle);\n    obj.setAttribute('class', _constant.SensorClassName);\n    obj.type = 'text/html'; // 添加到 dom 结构中\n\n    _this.element.appendChild(obj); // 对于 ie 需要滞后，否则白屏，所以放到后面\n\n\n    obj.data = 'about:blank';\n    return obj;\n  };\n\n  this.resizeListener = (0, _debounce2.default)(function () {\n    // 依次触发执行\n    _this.listeners.forEach(function (listener) {\n      listener(_this.element);\n    });\n  });\n\n  this.bind = function (cb) {\n    // 如果不存在 sensor，则创建一个 object\n    if (!_this.sensor) {\n      _this.sensor = _this.createSensor();\n    }\n\n    if (_this.listeners.indexOf(cb) === -1) {\n      _this.listeners.push(cb);\n    }\n  };\n\n  this.unbind = function (cb) {\n    var idx = _this.listeners.indexOf(cb);\n\n    if (idx !== -1) {\n      _this.listeners.splice(idx, 1);\n    } // 不存在 listener，并且存在 sensor object\n    // 则移除 object\n\n\n    if (_this.listeners.length === 0 && _this.sensor) {\n      _this.destroy();\n    }\n  };\n\n  this.destroy = function () {\n    if (_this.sensor && _this.sensor.parentNode) {\n      // 移除事件\n      _this.sensor.contentDocument.defaultView.removeEventListener('resize', _this.resizeListener); // 移除 dom\n\n\n      _this.sensor.parentNode.removeChild(_this.sensor); // 初始化\n\n\n      _this.sensor = undefined;\n      _this.listeners = [];\n    }\n  };\n\n  this.element = element;\n  this.listeners = []; // 感应器\n\n  this.sensor = undefined;\n}\n/**\n * 创建 sensor 的 object DOM\n * @returns {HTMLObjectElement}\n */\n\n/**\n * 统一触发 listeners\n */\n\n/**\n * 监听某一个 callback\n * @param cb\n */\n\n/**\n * 取消绑定\n * @param cb\n */\n\n/**\n * 完全 destroy\n */\n;","map":null,"metadata":{},"sourceType":"script"}