{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"E:\\\\Concordia course\\\\laoma\\u524D\\u7AEF\\\\#9 react\\u6155\\u8BFE2\\\\project\\\\BikeSharingMS-master\\\\src\\\\pages\\\\table\\\\basicTable.js\";\nimport React from 'react';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils';\n\nclass BasicTable extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dataSource: []\n    };\n    this.params = {\n      page: 1\n    };\n\n    this.request = () => {\n      let _this = this;\n\n      axios.ajax({\n        url: '/table/list',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        if (res.code == 0) {\n          res.result.list.map((item, index) => {\n            item.key = index;\n          });\n          this.setState({\n            dataSource2: res.result.list,\n            selectedRowKeys: [],\n            selectedRows: null,\n            pageination: Utils.pagination(res, current => {\n              _this.params.page = current;\n              this.request();\n            })\n          });\n        }\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectKey = [index];\n      this.setState({\n        selectedRowKeys: selectKey,\n        selectedItem: record\n      });\n    };\n\n    this.handleDelete = () => {\n      let rows = this.state.selectedRows;\n      let ids = [];\n      rows.map(item => {\n        ids.push(item.id);\n      });\n\n      _Modal.confirm({\n        title: 'Delete Notic',\n        content: \"Are you sure you want to delete this data? \".concat(ids.join(',')),\n        onOk: () => {\n          _message.success('successfully deleted');\n\n          this.request();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const data = [{\n      id: '0',\n      userName: 'Jack',\n      sex: '1',\n      state: '1',\n      interest: '1',\n      brithday: '2000-01-01',\n      address: 'Vancouver, BC',\n      time: '09:00'\n    }, {\n      id: '1',\n      userName: 'Tom',\n      sex: '1',\n      state: '1',\n      interest: '1',\n      brithday: '2000-01-01',\n      address: 'Vancouver, BC',\n      time: '09:00'\n    }, {\n      id: '2',\n      userName: 'Lily',\n      sex: '1',\n      state: '1',\n      interest: '1',\n      brithday: '2000-01-01',\n      address: 'Montreal, QC',\n      time: '09:00'\n    }];\n    data.map((item, index) => {\n      item.key = index;\n    });\n    this.setState({\n      dataSource: data\n    });\n    this.request();\n  } // 动态获取mock数据\n  // request = ()=> {\n  //   let baseUrl = 'https://www.easy-mock.com/mock/5b012c1fe6e1035843cd3aff/mockapi'\n  //   axios.get(baseUrl + '/table/list').then((res)=> {\n  //     if(res.status =='200' && res.data.code == 0) {\n  //       this.setState({\n  //         dataSource2: res.data.result.list\n  //       })\n  //     }\n  // console.log(JSON.stringify(res))\n  //   })\n  // }\n\n\n  render() {\n    const columns = [{\n      title: 'id',\n      dataIndex: 'id'\n    }, {\n      title: 'username',\n      dataIndex: 'userName'\n    }, {\n      title: 'gender',\n      dataIndex: 'sex',\n\n      render(sex) {\n        return sex == 1 ? 'Male' : 'Female';\n      }\n\n    }, {\n      title: 'state',\n      dataIndex: 'state',\n\n      render(state) {\n        let config = {\n          '1': 'student',\n          '2': 'worker',\n          '3': 'teacher',\n          '4': 'CEO',\n          '5': 'artist'\n        };\n        return config[state];\n      }\n\n    }, {\n      title: 'hobby',\n      dataIndex: 'interest',\n\n      //interset不能随便写 必须是结构返回过来的字段\n      render(interest) {\n        let config = {\n          '1': 'swiming',\n          '2': 'basketball',\n          '3': 'football',\n          '4': 'running',\n          '5': 'hiking',\n          '6': 'ride',\n          '7': 'tennis',\n          '8': 'sing'\n        };\n        return config[interest];\n      }\n\n    }, {\n      title: 'birthday',\n      dataIndex: 'birthday'\n    }, {\n      title: 'address',\n      dataIndex: 'address'\n    }, {\n      title: 'Wakeup Time',\n      dataIndex: 'time'\n    }];\n    const selectedRowKeys = this.state.selectedRowKeys;\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    };\n    const rowCheckSelection = {\n      type: 'checkbox',\n      selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        // let ids = [];\n        // selectedRows.map((item)=>{\n        //   ids.push(item.id)\n        // })\n        this.setState({\n          selectedRowKeys,\n          selectedRows\n        });\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"Basic Table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true //加边框\n      ,\n      columns: columns,\n      dataSource: this.state.dataSource,\n      pagination: false //分页符\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Dynamic data rendering table-Mock\",\n      style: {\n        margin: '10px, 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true //加边框\n      ,\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: false //分页符\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Mock-Radio\",\n      style: {\n        margin: '10px, 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true //加边框\n      ,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: false //分页符\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Mock-Multiple selection\",\n      style: {\n        margin: '10px, 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      onClick: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Delete\")), React.createElement(_Table, {\n      bordered: true //加边框\n      ,\n      rowSelection: rowCheckSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: false //分页符\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"Mock-Table pagination\",\n      style: {\n        margin: '10px, 0'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true //加边框\n      ,\n      columns: columns,\n      dataSource: this.state.dataSource2,\n      pagination: this.state.pagination //分页符\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default BasicTable;","map":{"version":3,"sources":["E:\\Concordia course\\laoma前端\\#9 react慕课2\\project\\BikeSharingMS-master\\src\\pages\\table\\basicTable.js"],"names":["React","axios","Utils","BasicTable","Component","state","dataSource","params","page","request","_this","ajax","url","data","then","res","code","result","list","map","item","index","key","setState","dataSource2","selectedRowKeys","selectedRows","pageination","pagination","current","onRowClick","record","selectKey","selectedItem","handleDelete","rows","ids","push","id","confirm","title","content","join","onOk","success","componentDidMount","userName","sex","interest","brithday","address","time","render","columns","dataIndex","config","rowSelection","type","rowCheckSelection","onChange","margin","onClick","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Table, Modal, message, Button } from 'antd';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils'\n\nclass BasicTable extends React.Component {\n  state={\n    dataSource:[]\n  }\n\n  params ={\n    page: 1\n  }\n  componentDidMount() {\n    const data = [\n      {\n        id: '0',\n        userName: 'Jack',\n        sex: '1',\n        state: '1',\n        interest: '1',\n        brithday: '2000-01-01',\n        address: 'Vancouver, BC',\n        time: '09:00'\n      },\n      {\n        id: '1',\n        userName: 'Tom',\n        sex: '1',\n        state: '1',\n        interest: '1',\n        brithday: '2000-01-01',\n        address: 'Vancouver, BC',\n        time: '09:00'\n      },\n      {\n        id: '2',\n        userName: 'Lily',\n        sex: '1',\n        state: '1',\n        interest: '1',\n        brithday: '2000-01-01',\n        address: 'Montreal, QC',\n        time: '09:00'\n      },\n    ]\n    data.map((item, index)=> {\n      item.key = index;\n    })\n    this.setState({\n      dataSource: data\n    })\n    this.request();\n  }\n\n  // 动态获取mock数据\n  // request = ()=> {\n  //   let baseUrl = 'https://www.easy-mock.com/mock/5b012c1fe6e1035843cd3aff/mockapi'\n  //   axios.get(baseUrl + '/table/list').then((res)=> {\n  //     if(res.status =='200' && res.data.code == 0) {\n  //       this.setState({\n  //         dataSource2: res.data.result.list\n  //       })\n  //     }\n    \n      // console.log(JSON.stringify(res))\n  //   })\n  // }\n  request = ()=> {\n    let _this = this;\n      axios.ajax({\n        url:'/table/list',\n        data: {\n          params:{\n            page: this.params.page\n          }\n        }\n      }).then((res)=> {\n        if(res.code == 0) {\n          res.result.list.map((item, index)=> {\n            item.key = index;\n          })\n          this.setState({\n            dataSource2: res.result.list,\n            selectedRowKeys:[],\n            selectedRows:null,\n            pageination: Utils.pagination(res, (current)=>{\n              _this.params.page =current;\n              this.request();\n            })\n          })\n        }\n    \n    })\n  }\n  onRowClick = (record, index)=> {\n    let selectKey = [index];\n    this.setState({\n      selectedRowKeys: selectKey,\n      selectedItem: record\n    })\n  }\n  // 多选执行删除任务\n  handleDelete = ()=> {\n    let rows = this.state.selectedRows;\n    let ids = [];\n    rows.map((item)=> {\n      ids.push((item.id))\n    })\n    Modal.confirm({\n      title:'Delete Notic',\n      content:`Are you sure you want to delete this data? ${ids.join(',')}`,\n      onOk:()=> {\n        message.success('successfully deleted');\n        this.request();\n      }\n    })\n  }\n\n  render() {\n\n    const columns = [\n      {\n        title: 'id',\n        dataIndex: 'id'\n      },\n      {\n        title: 'username',\n        dataIndex: 'userName'\n      },\n      {\n        title: 'gender',\n        dataIndex: 'sex',\n        render(sex) {\n          return sex ==1 ? 'Male': 'Female'\n        }\n      },\n      {\n        title: 'state',\n        dataIndex: 'state',\n        render(state) {\n          let config = {\n            '1':'student',\n            '2':'worker',\n            '3':'teacher',\n            '4':'CEO',\n            '5':'artist'\n          }\n          return config[state]\n        }\n      },\n      {\n        title: 'hobby',\n        dataIndex: 'interest', //interset不能随便写 必须是结构返回过来的字段\n        render(interest) {\n          let config = {\n            '1':'swiming',\n            '2':'basketball',\n            '3':'football',\n            '4':'running',\n            '5':'hiking',\n            '6':'ride',\n            '7':'tennis',\n            '8':'sing'\n\n          }\n          return config[interest]\n        }\n      },\n      {\n        title: 'birthday',\n        dataIndex: 'birthday'\n      },\n      {\n        title: 'address',\n        dataIndex: 'address'\n      },\n      {\n        title: 'Wakeup Time',\n        dataIndex: 'time'\n      },\n    ]\n    const {selectedRowKeys} = this.state;\n\n    const rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    }\n\n    const rowCheckSelection = {\n      type: 'checkbox',\n      selectedRowKeys,\n      onChange:(selectedRowKeys, selectedRows)=> {\n        // let ids = [];\n        // selectedRows.map((item)=>{\n        //   ids.push(item.id)\n        // })\n        this.setState({\n          selectedRowKeys,\n          selectedRows\n        })\n      }\n    }\n    return(\n      <div>\n        <Card title=\"Basic Table\">\n          <Table \n          bordered //加边框\n            columns={columns}\n            dataSource={this.state.dataSource}\n            pagination={false} //分页符\n          />\n        </Card>\n        <Card title=\"Dynamic data rendering table-Mock\" style={{margin: '10px, 0'}}>\n          <Table \n          bordered //加边框\n            columns={columns}\n            dataSource={this.state.dataSource2}\n            pagination={false} //分页符\n          />\n        </Card>\n        <Card title=\"Mock-Radio\" style={{margin: '10px, 0'}}>\n          <Table \n            bordered //加边框\n            rowSelection={rowSelection}\n            onRow={(record, index)=> {\n              return{\n                onClick: ()=> {\n                    this.onRowClick(record, index);\n                  }\n              }\n            }}\n            columns={columns}\n            dataSource={this.state.dataSource2}\n            pagination={false} //分页符\n          />\n        </Card>\n        <Card title=\"Mock-Multiple selection\" style={{margin: '10px, 0'}}>\n        <div style={{marginBottom:10}}>\n          <Button onClick={this.handleDelete}>Delete</Button>\n        </div>\n          <Table \n            bordered //加边框\n            rowSelection={rowCheckSelection}\n            onRow={(record, index)=> {\n              return{\n                onClick: ()=> {\n                    this.onRowClick(record, index);\n                  }\n              }\n            }}\n            columns={columns}\n            dataSource={this.state.dataSource2}\n            pagination={false} //分页符\n          />\n        </Card>\n        <Card title=\"Mock-Table pagination\" style={{margin: '10px, 0'}}>\n          <Table \n            bordered //加边框\n            columns={columns}\n            dataSource={this.state.dataSource2}\n            pagination={this.state.pagination} //分页符\n          />\n        </Card>\n      </div>\n    );\n  }\n}\nexport default BasicTable;"]},"metadata":{},"sourceType":"module"}