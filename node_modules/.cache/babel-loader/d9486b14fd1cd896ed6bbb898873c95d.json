{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"E:\\\\Concordia course\\\\laoma\\u524D\\u7AEF\\\\#9 react\\u6155\\u8BFE2\\\\project\\\\BikeSharingMS-master\\\\src\\\\pages\\\\echarts\\\\line\\\\index.js\";\nimport React from 'react';\nimport echartTheme from './../echartTheme'; // import echarts from 'echarts'\n// 按需导入\n\nimport echarts from 'echarts/lib/echarts'; // 导入饼图\n\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\n\nclass Line extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption = () => {\n      let option = {\n        title: {\n          text: 'User riding order'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'total order',\n          type: 'line',\n          data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption2 = () => {\n      let option = {\n        title: {\n          text: 'User riding order'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['OFO', 'Mobike']\n        },\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'OFO',\n          type: 'line',\n          data: [1200, 3000, 4500, 6000, 8000, 12000, 20000]\n        }, {\n          name: 'Mobike',\n          type: 'line',\n          data: [1000, 2000, 5500, 6000, 8000, 10000, 12000]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption3 = () => {\n      let option = {\n        title: {\n          text: 'User riding order'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'total order',\n          type: 'line',\n          data: [1000, 2000, 1500, 3000, 2000, 1200, 800],\n          areaStyle: {}\n        }]\n      };\n      return option;\n    };\n  }\n\n  // 主题要提前注入 不能写在componentDidMount里\n  componentWillMount() {\n    echarts.registerTheme('line', echartTheme);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"No.1 line chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      theme: \"line\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"No.2 line chart\",\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.getOption2(),\n      theme: \"line\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"No.3 line chart\",\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.getOption3(),\n      theme: \"line\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Line;","map":{"version":3,"sources":["E:\\Concordia course\\laoma前端\\#9 react慕课2\\project\\BikeSharingMS-master\\src\\pages\\echarts\\line\\index.js"],"names":["React","echartTheme","echarts","ReactEcharts","Line","Component","getOption","option","title","text","tooltip","trigger","xAxis","data","yAxis","type","series","name","getOption2","legend","getOption3","boundaryGap","areaStyle","componentWillMount","registerTheme","render","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\nimport echartTheme from './../echartTheme';\n// import echarts from 'echarts'\n// 按需导入\nimport echarts from 'echarts/lib/echarts';\n// 导入饼图\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\n\n\n\nclass Line extends React.Component {\n\n  // 主题要提前注入 不能写在componentDidMount里\n  componentWillMount() {\n    echarts.registerTheme('line', echartTheme)\n  }\n\n  getOption =()=> {\n    let option = {\n      title: {\n        text: 'User riding order'\n      },      \n      tooltip: {\n        trigger: 'axis',\n      },\n      xAxis: {\n        data:['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: 'total order',\n          type: 'line',\n          data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n        }\n      ]\n    }\n    return option\n  }\n\n  getOption2 =()=> {\n      let option = {\n        title: {\n          text: 'User riding order'\n        },      \n        tooltip: {\n          trigger: 'axis',\n        },\n        legend: {\n          data:['OFO','Mobike']\n        },\n        xAxis: {\n          data:['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            name: 'OFO',\n            type: 'line',\n            data: [\n                1200,\n                3000,\n                4500,\n                6000,\n                8000,\n                12000,\n                20000\n            ]\n        },\n        {\n            name: 'Mobike',\n            type: 'line',\n            data: [\n                1000,\n                2000,\n                5500,\n                6000,\n                8000,\n                10000,\n                12000\n            ]\n        },\n        ]\n    }\n    return option\n  }\n\n  getOption3 =()=> {\n    let option = {\n      title: {\n        text: 'User riding order'\n      },      \n      tooltip: {\n        trigger: 'axis',\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data:['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: 'total order',\n          type: 'line',\n          data: [1000, 2000, 1500, 3000, 2000, 1200, 800],\n          areaStyle: {}\n        }\n      ]\n    }\n    return option\n  }\n\n  render() {\n    return(\n      <div>\n        <Card title=\"No.1 line chart\">\n          <ReactEcharts option={this.getOption()} theme=\"line\" style={{height:500}}/>\n        </Card>\n        <Card title=\"No.2 line chart\" style={{marginTop: 10}}>\n          <ReactEcharts option={this.getOption2()} theme=\"line\" style={{height:500}}/>        \n        </Card>\n        <Card title=\"No.3 line chart\" style={{marginTop: 10}}>\n          <ReactEcharts option={this.getOption3()} theme=\"line\" style={{height:500}}/>        \n        </Card>\n      </div>\n    );\n  }\n}\nexport default Line;"]},"metadata":{},"sourceType":"module"}