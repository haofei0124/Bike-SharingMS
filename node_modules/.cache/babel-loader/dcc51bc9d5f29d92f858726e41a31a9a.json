{"ast":null,"code":"import \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"E:\\\\Concordia course\\\\laoma\\u524D\\u7AEF\\\\#9 react\\u6155\\u8BFE2\\\\project\\\\BikeSharingMS-master\\\\src\\\\pages\\\\city\\\\index.js\";\nimport React from 'react';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\n\nclass City extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      isShowOpenCity: false\n    };\n    this.params = {\n      page: 1\n    };\n\n    this.requestList = () => {\n      let _this = this;\n\n      axios.ajax({\n        url: '/open_city',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        this.setState({\n          list: res.result.item_list.map((item, index) => {\n            item.key = index;\n            return item;\n          }),\n          pagination: Utils.pagination(res, current => {\n            _this.params.page = current;\n\n            _this.requestList();\n          })\n        });\n      });\n    };\n\n    this.handleOpenCity = () => {\n      this.setState({\n        isShowOpenCity: true\n      });\n    };\n\n    this.handleSubmit = () => {\n      let cityInfo = this.cityForm.props.form.getFieldsValue(); // 取值\n\n      axios.ajax({\n        url: '/city/open',\n        data: {\n          params: cityInfo\n        }\n      }).then(res => {\n        if (res.code == '0') {\n          _message.success('Open Successful');\n\n          this.setState({\n            isShowOpenCity: false\n          });\n          this.requestList();\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  render() {\n    const columns = [{\n      title: 'CityID',\n      dataIndex: 'id' //字段和表单定义的一致\n\n    }, {\n      title: 'CityName',\n      dataIndex: 'name'\n    }, {\n      title: 'Using mode',\n      dataIndex: 'mode',\n\n      render(mode) {\n        return mode == 1 ? 'Parking zone' : 'Forbidden zone';\n      }\n\n    }, {\n      title: 'Operation mode',\n      dataIndex: 'op_mode',\n\n      render(op_mode) {\n        return op_mode == 1 ? 'self-business' : 'Franchisees';\n      }\n\n    }, {\n      title: 'Authorized franchisee Name',\n      dataIndex: 'franchisee_name'\n    }, {\n      title: 'city admins',\n      dataIndex: 'city_admins',\n\n      render(arr) {\n        return arr.map(item => {\n          return item.user_name;\n        }).join(',');\n      }\n\n    }, {\n      title: 'Open Time',\n      dataIndex: 'open_time'\n    }, {\n      title: 'Update Time',\n      dataIndex: 'update_time',\n      render: Utils.formateDate\n    }, {\n      title: 'system username',\n      dataIndex: 'sys_user_name'\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(FilterForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleOpenCity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"open city\")), React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      className: \"ant-table-wrapper \",\n      bordered: true,\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(_Modal, {\n      title: \"open city\",\n      visible: this.state.isShowOpenCity,\n      onCancel: () => {\n        this.setState({\n          isShowOpenCity: false\n        });\n      },\n      onOk: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(OpenCityForm, {\n      wrappedComponentRef: inst => {\n        this.cityForm = inst;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default City;\n\nclass FilterForm extends React.Component {\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(_Form, {\n      layout: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, getFieldDecorator('city_id')(React.createElement(_Select, {\n      style: {\n        width: 100\n      },\n      placeholder: \"Select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Vancouer\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Toronto\"), React.createElement(Option, {\n      value: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Montreal\")))), React.createElement(FormItem, {\n      label: \"Using mode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, getFieldDecorator('mode')(React.createElement(_Select, {\n      style: {\n        width: 120\n      },\n      placeholder: \"ALL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Designated parking zone mode\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Forbidden zone mode\")))), React.createElement(FormItem, {\n      label: \"Operation mode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, getFieldDecorator('op_mode')(React.createElement(_Select, {\n      style: {\n        width: 80\n      },\n      placeholder: \"ALL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Self-business\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Franchisees\")))), React.createElement(FormItem, {\n      label: \"Franchise operation status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, getFieldDecorator('auth_status')(React.createElement(_Select, {\n      style: {\n        width: 90\n      },\n      placeholder: \"ALL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Authorized\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Unauthorized\")))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      style: {\n        margin: '0 20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Search\"), React.createElement(_Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Reset\")));\n  }\n\n}\n\nFilterForm = _Form.create({})(FilterForm);\n\nclass OpenCityForm extends React.Component {\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        span: 7\n      },\n      wrapperCol: {\n        span: 10\n      }\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(_Form, Object.assign({\n      layout: \"horizontal\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(FormItem, {\n      label: \"City select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, getFieldDecorator('city_id', {\n      initialValue: '1'\n    })(React.createElement(_Select, {\n      style: {\n        width: 130\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"ALL\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Vancouver\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Montreal\")))), React.createElement(FormItem, Object.assign({\n      label: \"Operation mode\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), getFieldDecorator('op_mode', {\n      initialValue: '1'\n    })(React.createElement(_Select, {\n      style: {\n        width: 130\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Self-business\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Franchisees\")))), React.createElement(FormItem, Object.assign({\n      label: \"Using mode\"\n    }, formItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), getFieldDecorator('user_mode', {\n      initialValue: '1'\n    })(React.createElement(_Select, {\n      style: {\n        width: 130\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Parking zone\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Forbidden zone\")))));\n  }\n\n}\n\nOpenCityForm = _Form.create({})(OpenCityForm); //Form.create去创建一个对象\n// 包装成antd这样一个form表单","map":{"version":3,"sources":["E:\\Concordia course\\laoma前端\\#9 react慕课2\\project\\BikeSharingMS-master\\src\\pages\\city\\index.js"],"names":["React","axios","Utils","FormItem","Item","Option","City","Component","state","list","isShowOpenCity","params","page","requestList","_this","ajax","url","data","then","res","setState","result","item_list","map","item","index","key","pagination","current","handleOpenCity","handleSubmit","cityInfo","cityForm","props","form","getFieldsValue","code","success","componentDidMount","render","columns","title","dataIndex","mode","op_mode","arr","user_name","join","formateDate","marginTop","inst","FilterForm","getFieldDecorator","width","margin","create","OpenCityForm","formItemLayout","labelCol","span","wrapperCol","initialValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Button, Table, Form, Select, Modal, message } from 'antd';\nimport axios from './../../axios/index';\nimport Utils from './../../utils/utils';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nclass City extends React.Component{\n  \n  state = {\n    list:[],\n    isShowOpenCity: false\n  }\n  \n  params = {\n    page: 1\n  }\n\n  componentDidMount() {\n    this.requestList()\n  }\n\n  requestList = ()=>{\n    let _this = this;\n    axios.ajax({\n      url: '/open_city',\n      data: {\n        params: {\n          page: this.params.page\n        }\n      }\n    }).then((res)=> {\n        this.setState({\n          list: res.result.item_list.map((item, index) => {\n              item.key = index\n              return item\n          }),\n          pagination: Utils.pagination(res, (current) => {\n              _this.params.page = current\n              _this.requestList()\n          })\n         })\n    })\n  }\n\n  //开通城市\n  handleOpenCity = () => {\n    this.setState({\n      isShowOpenCity:true\n    })\n  }\n\n  handleSubmit = ()=> {\n    let cityInfo = this.cityForm.props.form.getFieldsValue();// 取值\n    axios.ajax({\n      url: '/city/open',\n      data: {\n        params: cityInfo\n      }\n    }).then((res)=>{\n      if(res.code == '0'){\n        message.success('Open Successful');\n        this.setState({\n          isShowOpenCity: false\n        })\n        this.requestList();\n      }\n    })\n  }\n  render() {\n    const columns = [\n      {\n        title: 'CityID',\n        dataIndex: 'id' //字段和表单定义的一致\n      },\n      {\n        title: 'CityName',\n        dataIndex: 'name'\n      },\n      {\n        title: 'Using mode',\n        dataIndex: 'mode',\n        render(mode) {\n          return mode == 1 ? 'Parking zone' : 'Forbidden zone';\n        }\n      },\n      {\n        title: 'Operation mode',\n        dataIndex: 'op_mode',\n        render(op_mode) {\n          return op_mode == 1 ? 'self-business' : 'Franchisees';\n        }\n      },\n      {\n        title: 'Authorized franchisee Name',\n        dataIndex: 'franchisee_name'\n      },\n      {\n        title: 'city admins',\n        dataIndex: 'city_admins',\n        render(arr) {\n          return arr.map((item)=> {\n            return item.user_name\n          }).join(',');\n        }\n      },\n      {\n        title: 'Open Time',\n        dataIndex: 'open_time'\n      },\n      {\n        title: 'Update Time',\n        dataIndex: 'update_time',\n        render: Utils.formateDate\n      },\n      {\n        title: 'system username',\n        dataIndex: 'sys_user_name'\n      }\n    ]\n    return(\n      <div>\n        <Card>\n          <FilterForm />\n        </Card>\n        <Card style={{marginTop: 10}}>\n          <Button type=\"primary\" onClick={this.handleOpenCity}>open city</Button>\n        </Card>\n        <div className=\"content-wrap\">\n          <Table \n            className=\"ant-table-wrapper \"\n            bordered\n            columns={columns}\n            dataSource={this.state.list}\n            pagination={this.state.pagination}\n          />\n          <Modal\n            title=\"open city\"\n            visible={this.state.isShowOpenCity}\n            onCancel={()=> {\n              this.setState({\n                isShowOpenCity: false\n              })\n            }}\n            onOk={this.handleSubmit}\n          >\n           <OpenCityForm wrappedComponentRef={(inst)=>{this.cityForm = inst;}}/>\n\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default City; \n\nclass FilterForm extends React.Component {\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return(\n      <Form layout=\"inline\">\n        <FormItem label=\"City\">\n          {\n            getFieldDecorator('city_id')(\n              <Select\n                style={{width: 100}}\n                placeholder=\"Select\"\n              >\n                <Option value=\"\">ALL</Option>\n                <Option value=\"1\">Vancouer</Option>\n                <Option value=\"2\">Toronto</Option>\n                <Option value=\"3\">Montreal</Option>\n              </Select> \n            )\n          }\n        </FormItem>\n        <FormItem label=\"Using mode\">\n          {\n            getFieldDecorator('mode')(\n              <Select\n              style={{width: 120}}\n                placeholder=\"ALL\"\n              >\n                \n                <Option value=\"\">ALL</Option>\n                <Option value=\"1\">Designated parking zone mode</Option>\n                <Option value=\"2\">Forbidden zone mode</Option>\n              </Select> \n            )\n          }\n        </FormItem>\n        <FormItem label=\"Operation mode\">\n          {\n            getFieldDecorator('op_mode')(\n              <Select\n              style={{width: 80}}\n                placeholder=\"ALL\"\n              >\n                \n                <Option value=\"\">ALL</Option>\n                <Option value=\"1\">Self-business</Option>\n                <Option value=\"2\">Franchisees</Option>\n              </Select> \n            )\n          }\n        </FormItem>\n       \n        <FormItem label=\"Franchise operation status\">\n          {\n            getFieldDecorator('auth_status')(\n              <Select\n              style={{width: 90}}\n                placeholder=\"ALL\"\n              >\n                \n                <Option value=\"\">ALL</Option>\n                <Option value=\"1\">Authorized</Option>\n                <Option value=\"2\">Unauthorized</Option>\n              </Select> \n            )\n          }\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" style={{margin: '0 20px'}}>Search</Button>\n          <Button>Reset</Button>\n        </FormItem>\n      </Form>\n    );\n  }\n}\nFilterForm = Form.create({})(FilterForm);\n\nclass OpenCityForm extends React.Component {\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        span:7\n      },\n      wrapperCol: {\n        span:10\n      }\n    }\n    const { getFieldDecorator } = this.props.form;\n    return(\n      <Form layout=\"horizontal\" {...formItemLayout}> \n      {/* //解构出来 */}\n      \n        <FormItem label=\"City select\">\n        {\n        getFieldDecorator('city_id', {\n          initialValue: '1'\n        })(\n          <Select style={{width: 130}}>\n            <Option value=\"\">ALL</Option>\n            <Option value=\"1\">Vancouver</Option>\n            <Option value=\"2\">Montreal</Option>\n          </Select>\n        )\n      }\n        </FormItem>\n        <FormItem label=\"Operation mode\" {...formItemLayout}>\n        {\n        getFieldDecorator('op_mode', {\n          initialValue: '1'\n        })(\n          <Select style={{width: 130}}>\n            <Option value=\"1\">Self-business</Option>\n            <Option value=\"2\">Franchisees</Option>\n          </Select>\n        )\n      }\n          \n        </FormItem>\n        <FormItem label=\"Using mode\" {...formItemLayout}>\n        {\n        getFieldDecorator('user_mode', {\n          initialValue: '1'\n        })(\n          <Select style={{width: 130}}>\n          <Option value=\"1\">Parking zone</Option>\n          <Option value=\"2\">Forbidden zone</Option>\n        </Select>\n        )\n      }\n         \n        </FormItem>\n      </Form>\n    );\n  }\n}\nOpenCityForm = Form.create({})(OpenCityForm); //Form.create去创建一个对象\n// 包装成antd这样一个form表单\n\n"]},"metadata":{},"sourceType":"module"}