{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"E:\\\\Concordia course\\\\laoma\\u524D\\u7AEF\\\\#9 react\\u6155\\u8BFE2\\\\project\\\\BikeSharingMS-master\\\\src\\\\pages\\\\echarts\\\\bar\\\\index.js\";\nimport React from 'react';\nimport echartTheme from './../echartTheme'; // import echarts from 'echarts'\n// 按需导入\n\nimport echarts from 'echarts/lib/echarts'; // 导入柱形图\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\n\nclass Bar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption = () => {\n      let option = {\n        title: {\n          text: 'User riding order'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'total order',\n          type: 'bar',\n          data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption2 = () => {\n      let option = {\n        title: {\n          text: 'User riding order'\n        },\n        legend: {\n          data: ['OFO', 'Mobike', 'bluegogo'] // 和后面series里的name必须对应\n\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        // series是整个它的数据源\n        // 坐标里中间是数据源\n        series: [{\n          name: 'OFO',\n          type: 'bar',\n          data: [2000, 3000, 5500, 7000, 8000, 12000, 20000]\n        }, {\n          name: 'Mobike',\n          type: 'bar',\n          data: [1500, 3000, 4500, 6000, 8000, 10000, 15000]\n        }, {\n          name: 'bluegogo',\n          type: 'bar',\n          data: [1000, 2000, 2500, 4000, 6000, 7000, 8000]\n        }]\n      };\n      return option;\n    };\n  }\n\n  // 主题要提前注入 不能写在componentDidMount里\n  componentWillMount() {\n    echarts.registerTheme('charts', echartTheme);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(_Card, {\n      title: \"No.1 bar charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      theme: \"charts\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(_Card, {\n      title: \"No.2 bar charts\",\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(ReactEcharts, {\n      option: this.getOption2(),\n      theme: \"charts\",\n      style: {\n        height: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Bar;","map":{"version":3,"sources":["E:\\Concordia course\\laoma前端\\#9 react慕课2\\project\\BikeSharingMS-master\\src\\pages\\echarts\\bar\\index.js"],"names":["React","echartTheme","echarts","ReactEcharts","Bar","Component","getOption","option","title","text","tooltip","trigger","xAxis","data","yAxis","type","series","name","getOption2","legend","componentWillMount","registerTheme","render","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card } from 'antd';\nimport echartTheme from './../echartTheme';\n// import echarts from 'echarts'\n// 按需导入\nimport echarts from 'echarts/lib/echarts';\n// 导入柱形图\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\n\n\n\nclass Bar extends React.Component {\n\n  // 主题要提前注入 不能写在componentDidMount里\n  componentWillMount() {\n    echarts.registerTheme('charts', echartTheme)\n  }\n\n  getOption =()=> {\n    let option = {\n      title: {\n        text: 'User riding order'\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        data:['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [\n        {\n          name: 'total order',\n          type: 'bar',\n          data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n        }\n      ]\n    }\n    return option\n  }\n\n  getOption2 =()=> {\n    let option = {\n      title: {\n        text: 'User riding order'\n      },\n      legend: {\n        data: ['OFO', 'Mobike','bluegogo']\n        // 和后面series里的name必须对应\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        data:['Mon','Tue','Wed','Thu','Fri','Sat','Sun']\n      },\n      yAxis: {\n        type: 'value'\n      },\n      // series是整个它的数据源\n      // 坐标里中间是数据源\n      series: [\n        {\n          name: 'OFO',\n          type: 'bar',\n          data:  [2000,3000,5500,7000,8000,12000,20000]\n        },\n        {\n          name: 'Mobike',\n          type: 'bar',\n          data:  [1500,3000,4500,6000,8000,10000,15000]\n        },\n        {\n          name: 'bluegogo',\n          type: 'bar',\n          data: [1000,2000,2500,4000,6000,7000,8000]\n        },\n      ]\n    }\n    return option\n  }\n\n  render() {\n    return(\n      <div>\n        <Card title=\"No.1 bar charts\">\n          <ReactEcharts option={this.getOption()} theme=\"charts\" style={{height:500}}/>\n        </Card>\n        <Card title=\"No.2 bar charts\" style={{marginTop: 10}}>\n          <ReactEcharts option={this.getOption2()} theme=\"charts\" style={{height:500}}/>        \n        </Card>\n      </div>\n    );\n  }\n}\nexport default Bar;"]},"metadata":{},"sourceType":"module"}